<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://camel.apache.org/schema/spring 
       http://camel.apache.org/schema/spring/camel-spring.xsd
       ">

	<context:annotation-config/>

	<bean id="command.releaser" class="org.hbird.business.command.releaser.CommandReleaser"/>
	
	<bean id="header.mapper" class="org.hbird.exchange.utilities.AllFields"/>
	
	<bean id="provider" class="org.hbird.business.parameterstorage.InMemoryParameterBuffer"/>


	<camelContext id="commandReleaserContext" xmlns="http://camel.apache.org/schema/spring"> 
		<template id="producer"/>
		
		<!-- Route to receive commands injected from somebody, and release them. -->		
		<route>
			<from uri="activemq:queue:Commands" />
			<split>
			<method bean="command.releaser"></method>
			<choice>
	            <when>
	                <simple>${body} is org.hbird.exchange.commanding.Command</simple>                
	                <to uri="bean:header.mapper"/>
					<to uri="activemq:queue:ReleasedCommands" />
	            </when>
				<when>
	                <simple>${body} is org.hbird.exchange.commanding.Task</simple>                
	                <to uri="bean:header.mapper"/>
					<to uri="activemq:queue:Tasks" />
	            </when>
			</choice>
			</split>
		</route>

		<route>
			<from uri="activemq:queue:ParameterRequests" />
			<to uri="bean:provider?method=getParameterByName"/>
		</route>
		
		<route>
			<from uri="direct:Parameters" />
			<to uri="bean:provider?method=storeParameter"/>			
		</route>		
		
	</camelContext>

</beans>
